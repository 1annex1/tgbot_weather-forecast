import requests
import datetime
import asyncio
from config import open_weather_token, tg_bot_token  # –ò–º–ø–æ—Ä—Ç —Ç–æ–∫–µ–Ω–æ–≤ –∏–∑ config.py
from aiogram import Bot, Dispatcher
from aiogram.types import Message
from aiogram.filters import Command

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=tg_bot_token)
dp = Dispatcher()

# –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(Command("start"))  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∏–ª—å—Ç—Ä Command –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã
async def cmd_start(message: Message):
    user_first_name = message.from_user.first_name 
    await message.reply(f'–ü—Ä–∏–≤–µ—Ç, {user_first_name}!–ù–∞–ø–∏—à–∏ –≥–æ—Ä–æ–¥, –∞ —è —Å–∫–∞–∂—É –ø–æ–≥–æ–¥—É!')

# –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã
@dp.message()  # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è
async def get_weather(message: Message):
    city = message.text  # –ì–æ—Ä–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤–≤–µ–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    try:
        r = requests.get(
            f"https://api.openweathermap.org/data/2.5/weather?q={city}&appid={open_weather_token}&units=metric&lang=ru"
        )
        r.raise_for_status()  # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ –∑–∞–ø—Ä–æ—Å–∞
        data = r.json()

        city_name = data["name"]
        cur_weather = data["main"]["temp"]
        humidity = data["main"]["humidity"]
        pressure = data["main"]["pressure"]
        wind = data["wind"]["speed"]
        sunrise_timestamp = datetime.datetime.fromtimestamp(data["sys"]["sunrise"]).strftime('%H:%M:%S')

        await message.reply(
            f"–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ: {city_name}\n"
            f"üå°Ô∏è–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞üå°Ô∏è: {cur_weather}¬∞C\n"
            f"üåßÔ∏è–í–ª–∞–∂–Ω–æ—Å—Ç—åüåßÔ∏è: {humidity}%\n"
            f"‚òÇÔ∏è–î–∞–≤–ª–µ–Ω–∏e‚òÇÔ∏è: {pressure} –º–º.—Ä—Ç.—Å—Ç.\n"
            f"üå™Ô∏è–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞üå™Ô∏è: {wind} –º/—Å\n"
            f"‚òÄÔ∏è–í–æ—Å—Ö–æ–¥ —Å–æ–ª–Ω—Ü–∞‚òÄÔ∏è: {sunrise_timestamp}\n"
            f"–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!"
        )

    except requests.exceptions.HTTPError as http_err:
        await message.reply(f"–û—à–∏–±–∫–∞,–ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞!")
    except KeyError as key_err:
        await message.reply(f"–û—à–∏–±–∫–∞,–ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞!")
    except Exception as ex:
        await message.reply(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {ex}")

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
async def main():
    print("–ë–æ—Ç –≤–∫–ª—é—á–µ–Ω")
    await dp.start_polling(bot)

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print('–ë–æ—Ç –≤—ã–∫–ª—é—á–µ–Ω')
